Async/Await Functions : During our react discussions!


REACT:
    A front-end JS library to create intuitive, responsive UIs.
    HTML, CSS, JavaScript - front-end technologies! (Already discussed)

    React actually works on a concept of "components", the components remain the same and their data keep on changing...

    SPA: Single Page Applications! (index.html is the only page that is loaded from server... rest all data is update inside the components asynchronously)

MEAN/MERN:
    MongoDB(Persistance storage), ExpressJS(Used to setup the servers), AngularJS (UI Library/framework that can be used to make UIs), NodeJS (runtime environment) (MEAN)
    MongoDB, ExpressJS, ReactJS(UI Framework), NodeJS (MERN)

REACT is based on HTML,CSS and JavaScript!

WHY REACT: UI becomes difficult to manage with Vanila JavaScript...

First Application:

Node_modules is the BIGGEST folder in our application. So much so, that we exclude it when pushing the contents to the github...

NEVER SEND YOU NODE_MODULES FOLDER WHILE SENDING YOUR PROJECTS TO ME OR SOMEONE...

node_modules consists of all libraries/files needed to run react application..... NEVER SEND...

Francis Question: When  you will send me folder without node_modules, i will run "npm install" command inside your folder and node_moduels will automatcially come in my folder...


July 3,2024:

package.json: "npm install" actually looks package.json and installs or creates the folder node_modules for all required files that are mentioned in package.json..

ALWAYS ALWAYS SEND YOUR PACKAGE.JSON TO ME WHILE SENDING YOUR PROJECT...NEVER SEND NODE_MODULES.

In public folder we have "index.html", this is the Single page that runs when react app runs...

In src folder we have "index.js" that somehow accesses the index.html's div with root id and renders there "<App/>" component.


App component is the main component that actually runs when we run our react application...

All components' syntax is like functions ... the difference is that the component actually returns "JSX"

function App(){

    return "JSX"
}

JSX ... is a combination of HTML, CSS and JS.
{ } javascript expression box where we can write literally any javascript!

Every component returns "JSX" that is boiled down to HTML when it goes to index.html

<> </> react fragments.. they are used to wrap around all the JSX and they donot generate their own code...

Create a new component and call it in App component:

Props: (properties)
 props to the components are LIKE parameters to the functions
 We pass them while calling the component and receive them in called component....

 function Header(props) {
  let x = props.name;
  let y = props.text;
  return (
    <div>
      <h1>{x}</h1>
      <p>{y}</p>
    </div>
  );
}

export default Header;


function Header(props) {
  let { title, text } = props;
  return (
    <div>
      <h1>{title}</h1>
      <p>{text}</p>
    </div>
  );
}

export default Header;


function Header({ title, text }) {
  return (
    <div>
      <h1>{title}</h1>
      <p>{text}</p>
    </div>
  );
}

export default Header;

July 4,2024:
rafce --- 

rfce ---

New project: tasktracker!

components/Header.jsx

 {/* <button className="btn">Add</button> */}
